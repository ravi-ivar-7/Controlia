 docker run -it --name cont_rk -v vol_rk:/home/ravi controlia:latest

 docker run -it --name cont_rk vol_rkdocker exec -it cont_rk ls -l /home/ravi

 docker exec -it cont_rk ls -l /


 
docker build -t controlia .  (only one time when creating base image/new image for the first time)

create a volume for container: docker volume create ravi_vol

docker run -d --name ravi_cont -v ravi_vol:/ravi/data controlia

Enter the running container with a shell. docker exec -it ravi_cont /bin/bash
Switch to the ravi User:su - ravi


Verify the status of the container to confirm that it is not running. docker ps -a
restart container: docker start df9e54d1283c

// name and tag unnamed repo: docker tag ebc166a3037d controlia:latest
// exsiting : docker tag old_image:latest new_image:latest


checking gid: Check Existing GID


find usedid: docker exec <container_id_or_name> cat /etc/passwd

Access the Container with the User ID or Username:
  - docker exec -u <UID> -it <container_id_or_name> /bin/bash
  - docker exec -u <username> -it <container_id_or_name> /bin/bash


installing after image build:
Start a Container from the Image:docker run -it controlia:latest /bin/bash
apt-get update
apt-get install -y nano

If you want to keep the changes and create a new image with nano installed, you can commit the container to a new image:
docker commit <container_id> my_controlia_with_nano:latest
